
### 元组的格式是怎样的？
>>> (1,'-1',True)
(1, '-1', True)
>>> 
和列表差不多，只是外面用()括起来


### 如何证明(1,'-1',True)是一个元组？
>>> type((1,'-1',True))
<class 'tuple'>
>>> 
tuple 这个英文读"他叵"


### 如何提起(1, '-1', True) 里的元素1
>>> (1,'-1',True)[0]
1
>>> 


### 如何提取(1,2,3,4) 中的(1,2)?
>>> (1,2,3,4)[0:2]
(1, 2)
>>> 


### 如何将元组(1,2,3)和元组(4,5,6)合并？
>>> (1,2,3)+(4,5,6)
(1, 2, 3, 4, 5, 6)
>>> 


### 如何将群组重复3遍
>>> (1,2,3)*3
(1, 2, 3, 1, 2, 3, 1, 2, 3)
>>> 


元组和列表区别是什么呢？可以自行百度，课程后面也会讲
一、列表和元组的区别
    列表是动态数组，它们可变且可以重设长度（改变其内部元素的个数）。
    元组是静态数组，它们不可变，且其内部数据一旦创建便无法改变。
    元组缓存于Python运行时环境，这意味着我们每次使用元组时无须访问内核去分配内存。
这些区别结实率两者在设计哲学上的不同：
列表可被用于保存多个互相独立对象的数据集合
元组用于描述一个不会改不安的事务的多个属性


### type((1))得到的结果是什么呢？
>>> type((1))
<class 'int'>
>>> 
问：为什么得到的不是元组类型？
答案：因为在()里边不是存在逗号分隔的多个元素时
比如(1+1)，代表的是运算、或者元组
此时计算机无法切确地知道程序员想要表达的是int还是tuple
就会按照优先级进行判断，而整型优先级高于元组
故得到的判断为，type((1))是整型


### 如何定义只有一个元素的元组？比如(1)
>>> type((1,))
<class 'tuple'>
>>> 
在那个元素后加上一个逗号，假装不止一个元素


### 如何定义一个空的元组？
>>> type(())
<class 'tuple'>
>>> 



### 前面说了，type((1)) 结果是一个int类型
那type([1]) 结果是什么类型？
>>> type([1])
<class 'list'>
>>> 
这个小的知识点记住就好





